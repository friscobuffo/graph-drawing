COMPILER := g++
OBJ_DIR := obj

# Directory flags
OGDF_INCLUDES := -IOGDF/include
CXXFLAGS := -std=c++20 -O3 -march=native

# OGDF flags (only for files that need it)
OGDF_LDFLAGS := -LOGDF -lOGDF -lCOIN

# Source files
COMMON_SRCS := src/stats.cpp \
	src/sat/glucose.cpp \
	src/sat/cnf_builder.cpp \
	src/orthogonal/shape.cpp \
	src/orthogonal/shape_builder.cpp \
	src/drawing/polygon.cpp \
	src/drawing/svg_drawer.cpp \
	src/orthogonal/drawing_builder.cpp \
    src/config/config.cpp \
	src/core/graph/generators.cpp

# Files that need OGDF
OGDF_SRCS := src/baseline-ogdf/drawer.cpp

# Object files
COMMON_OBJS := $(COMMON_SRCS:%.cpp=$(OBJ_DIR)/%.o)
OGDF_OBJS := $(OGDF_SRCS:%.cpp=$(OBJ_DIR)/%.o)

# Final output binary
TARGET := test

# Build target
all: $(TARGET)

# Link object files into final binary
$(TARGET): $(COMMON_OBJS) $(OGDF_OBJS)
	$(COMPILER) $(CXXFLAGS) -o $@ $(COMMON_OBJS) $(OGDF_OBJS) $(OGDF_LDFLAGS)

# Compile normal source files
$(OBJ_DIR)/%.o: %.cpp
	@mkdir -p $(dir $@)
	$(COMPILER) $(CXXFLAGS) -c $< -o $@

# Compile OGDF-dependent source files
$(OBJ_DIR)/src/baseline-ogdf/%.o: src/baseline-ogdf/%.cpp
	@mkdir -p $(dir $@)
	$(COMPILER) $(CXXFLAGS) $(OGDF_INCLUDES) -c $< -o $@

# Clean build files
clean:
	rm -rf $(OBJ_DIR) $(TARGET)

.PHONY: all clean